# Mac OS X notes
#
# - current Travis CI environment is Mac OS X 10.9.5 (Mavericks),
#   released 2013
# - current Boost from Homebrew is 1.60 - and produces link errors
#   with gcc (when linking Boost Regex)
# - as-is, travis has /usr/local/bin/g++-{4.2,4.6,4.8,4.9}

# Ubuntu Trusty notes
#
# - default GCC is too old (4.8)
# - default Boost is too old (1.54)


sudo: required

#dist: trusty

#os:
# TODO enable linux in build matrix
#  - linux

language: cpp

matrix:
  include:
    - os: osx
      compiler: clang
      # Apple's clang 3.5 doesn't support sanitize options
      # although the upstream 3.5 does ...
      env: CMAKE_BUILD_TYPE=Coverage    MY_CXX=clang++     MY_CC=clang
    - os: osx
      compiler: clang
      # clang 3.7 from Homebrew understands all sanitize flags
      # but the runtime libraries aren't available
      #- CMAKE_BUILD_TYPE=Sanitize MY_CXX=clang++-3.7 MY_CC=clang-3.7
      env: CMAKE_BUILD_TYPE=Debug    MY_CXX=clang++-3.7 MY_CC=clang-3.7
    # with clang 3.7 from Homebrew, the libclang_rt.profile_osx.a os
    # not available ... thus linking fails
    # - os: osx
    #  compiler: clang
    #  env: CMAKE_BUILD_TYPE=Coverage MY_CXX=clang++-3.7 MY_CC=clang-3.7
    - os: osx
      compiler: clang
      env: CMAKE_BUILD_TYPE=Release  MY_CXX=clang++-3.7 MY_CC=clang-3.7
    - os: linux
      services: docker
      env: docker_image=gsauthof/fedora-cxx-devel:23 build_tag=linux CMAKE_BUILD_TYPE=SanitizeO
    - os: linux
      services: docker
      env: docker_image=gsauthof/fedora-mingw64-devel:23 docker_image_b=gsauthof/fedora-mingw64-runtime:23 build_tag=mingw64 CMAKE_BUILD_TYPE=Release


before_install:
  - ./ci/travis/before_install.sh

install:
  - ./ci/travis/install.sh

before_script:
  - ./ci/travis/before_script.sh

script:
  - ./ci/travis/script.sh

after_success:
  - ./ci/travis/after_success.sh

#after_failure:

#before_deploy:

#deploy:

#after_deploy:

after_script:
  - ./ci/travis/after_script.sh
